{"ast":null,"code":"var _jsxFileName = \"/Users/tranhainam/Downloads/ReactMultiPageWebsite-master/src/components/Categories.js\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBowlFood } from \"@fortawesome/free-solid-svg-icons\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { faCheckCircle, faFilePen, faXmark, faSortAmountUp, faSortAmountDown } from \"@fortawesome/free-solid-svg-icons\";\nexport const Categories = () => {\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    updateCategories();\n    navigate(window.location.pathname, {});\n    onClickHandler();\n  }, []);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const categoryPerPage = 4;\n  const totalPage = categories.length / categoryPerPage - Math.floor(categories.length / categoryPerPage) == 0 ? categories.length / categoryPerPage : Math.floor(categories.length / categoryPerPage) + 1;\n  const [message, setMessage] = useState(state && state.message ? state.message.message : \"\");\n  const [isAsc, setIsAsc] = useState(true);\n  const [sortField, setSortField] = useState(\"\"); //load data\n\n  const onClickHandler = async () => {\n    const result = await fetch(\"http://localhost:8082/category/loadImage/2\", {\n      mode: \"no-cors\" // 'cors' by default\n\n    });\n    const blob = await result.blob();\n    const url = URL.createObjectURL(blob);\n    setImage(url);\n    console.log(url);\n  }; //update data\n\n\n  const updateCategories = () => {\n    fetch(\"http://localhost:8082/ShoppingCartAdmin/category/getAll\").then(res => res.json()).then(result => {\n      setCategories(result);\n    });\n  }; //delete category\n\n\n  const handleDelete = id => {\n    fetch(\"http://localhost:8082/ShoppingCartAdmin/category/delete/\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      setMessage(result.message);\n    }).then(updateCategories);\n  }; //enable/disable category\n\n\n  const handleEnable = (id, bool) => {\n    fetch(\"http://localhost:8082/ShoppingCartAdmin/category/\" + id + \"/enabled/\" + bool, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => setMessage(result.message)).then(() => {\n      updateCategories();\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    src: image ? image : null,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Manage Categories - View All\")), message != \"\" ? React.createElement(\"div\", {\n    className: \"alert alert-success text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, message) : null, React.createElement(\"a\", {\n    href: \"http://localhost:8082/ShoppingCartAdmin/users/export/csv\",\n    style: {\n      margin: \"0 5px 0 5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faFileCsv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    href: \"http://localhost:8082/ShoppingCartAdmin/users/export/pdf\",\n    style: {\n      margin: \"0 5px 0 5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faFilePdf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    href: \"http://localhost:8082/ShoppingCartAdmin/users/export/excel\",\n    style: {\n      margin: \"0 5px 0 5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faFileExcel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"full-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-bordered table-striped table-hover table-reponsive-xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"thead-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"hideable-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"text-white\",\n    onClick: () => {\n      if (isAsc && sortField == \"id\" || !isAsc && sortField != \"id\") {\n        setIsAsc(false);\n        setSortField(\"id\");\n        setCategories([...categories].sort((a, b) => a.id > b.id ? -1 : 1));\n      } else if (!isAsc && sortField == \"id\" || isAsc && sortField != \"id\") {\n        setIsAsc(true);\n        setSortField(\"id\");\n        setCategories([...categories].sort((a, b) => a.id > b.id ? 1 : -1));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Category Name\"), sortField == \"id\" && isAsc == true ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })) : sortField == \"id\" && !isAsc ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })) : null), React.createElement(\"th\", {\n    className: \"hideable-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Image\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"text-white\",\n    onClick: () => {\n      if (isAsc && sortField == \"name\" || !isAsc && sortField != \"name\") {\n        setIsAsc(false);\n        setSortField(\"name\");\n        setCategories([...categories].sort((a, b) => a.name > b.name ? -1 : 1));\n      } else if (!isAsc && sortField == \"name\" || isAsc && sortField != \"name\") {\n        setIsAsc(true);\n        setSortField(\"name\");\n        setCategories([...categories].sort((a, b) => a.name > b.name ? 1 : -1));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Category Name\"), sortField == \"name\" && isAsc == true ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })) : sortField == \"name\" && !isAsc ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })) : null), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"text-white\",\n    onClick: () => {\n      if (isAsc && sortField == \"alias\" || !isAsc && sortField != \"alias\") {\n        setIsAsc(false);\n        setSortField(\"alias\");\n        setCategories([...categories].sort((a, b) => a.alias > b.alias ? -1 : 1));\n      } else if (!isAsc && sortField == \"alias\" || isAsc && sortField != \"alias\") {\n        setIsAsc(true);\n        setSortField(\"alias\");\n        setCategories([...categories].sort((a, b) => a.alias > b.alias ? 1 : -1));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Alias\"), sortField == \"alias\" && isAsc == true ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })) : sortField == \"alias\" && !isAsc ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })) : null), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"text-white\",\n    onClick: () => {\n      if (isAsc && sortField == \"enable\" || !isAsc && sortField != \"enable\") {\n        setIsAsc(false);\n        setSortField(\"enable\");\n        setCategories([...categories].sort((a, b) => a.enable > b.enable ? -1 : 1));\n      } else if (!isAsc && sortField == \"enable\" || isAsc && sortField != \"enable\") {\n        setIsAsc(true);\n        setSortField(\"enable\");\n        setCategories([...categories].sort((a, b) => a.enable > b.enable ? 1 : -1));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Enable\"), sortField == \"enable\" && isAsc == true ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  })) : sortField == \"enable\" && !isAsc ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSortAmountDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  })) : null), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Delete\")))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, categories.map((category, index) => {\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"hideable-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, category.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-portait fa-3x icon-silver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faBowlFood,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      className: \"hideable-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, category.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, category.alias), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, category.enabled ? React.createElement(\"span\", {\n      onClick: () => {\n        handleEnable(category.id, false);\n      },\n      tittle: \"'Disable this ' + 'category'\",\n      className: \"fas fa-check-circle fa-2x icon-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      onClick: () => {\n        handleEnable(category.id, true);\n      } //   th:if=\"${category.enabled == false}\"\n      //   th:href=\"@{'/categorys/' + ${category.id} + '/enabled/true'}\"\n      //   th:tittle=\"'Enabled this ' + 'category'\"\n      ,\n      className: \"fas fa-circle fa-2x icon-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/category/update/\" + category.id // th:tittle=\"'Edit this' + 'category'\"\n      ,\n      className: \"fas fa-edit fa-2x icon-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faFilePen,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => handleDelete(category.id) // th:href=\"@{'/category/delete/' + ${category.id}}\"\n      // th:entityId=\"${category.id}\"\n      // th:tittle=\"'Delete this' + 'category'\"\n      ,\n      className: \"fas fa-trash fa-2x icon-dark link-delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faXmark,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }))));\n  })))), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"pagination justify-content-center flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: currentPage > 1 ? \"page-item active\" : \"page-item disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      setCurrentPage(1);\n    },\n    className: \"page-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, \"First\")), React.createElement(\"li\", {\n    className: currentPage > 1 ? \"page-item active\" : \"page-item disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      }\n    },\n    className: \"page-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, \"Previous\")), Array(totalPage).fill(null).map((item, index) => {\n    if (index + 1 == currentPage) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"page-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"\",\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, index + 1));\n    } else {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          setCurrentPage(index + 1);\n        },\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, index + 1));\n    }\n  }), React.createElement(\"li\", {\n    className: currentPage < totalPage ? \"page-item active\" : \"page-item disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      if (currentPage < totalPage) {\n        setCurrentPage(currentPage + 1);\n      }\n    },\n    className: \"page-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"Next\")), React.createElement(\"li\", {\n    className: currentPage < totalPage ? \"page-item active\" : \"page-item disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      setCurrentPage(totalPage);\n    },\n    className: \"page-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, \"Last\")))));\n};","map":{"version":3,"sources":["/Users/tranhainam/Downloads/ReactMultiPageWebsite-master/src/components/Categories.js"],"names":["useState","useEffect","React","FontAwesomeIcon","faBowlFood","useLocation","useNavigate","faCheckCircle","faFilePen","faXmark","faSortAmountUp","faSortAmountDown","Categories","categories","setCategories","updateCategories","navigate","window","location","pathname","onClickHandler","state","image","setImage","currentPage","setCurrentPage","categoryPerPage","totalPage","length","Math","floor","message","setMessage","isAsc","setIsAsc","sortField","setSortField","result","fetch","mode","blob","url","URL","createObjectURL","console","log","then","res","json","handleDelete","id","method","headers","handleEnable","bool","margin","faFileCsv","faFilePdf","faFileExcel","sort","a","b","name","alias","enable","map","category","index","enabled","Array","fill","item"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBowlFood } from \"@fortawesome/free-solid-svg-icons\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  faCheckCircle,\n  faFilePen,\n  faXmark,\n  faSortAmountUp,\n  faSortAmountDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nexport const Categories = () => {\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    updateCategories();\n    navigate(window.location.pathname, {});\n    onClickHandler();\n  }, []);\n\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const [image, setImage] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const categoryPerPage = 4;\n  const totalPage =\n    categories.length / categoryPerPage -\n      Math.floor(categories.length / categoryPerPage) ==\n    0\n      ? categories.length / categoryPerPage\n      : Math.floor(categories.length / categoryPerPage) + 1;\n  const [message, setMessage] = useState(\n    state && state.message ? state.message.message : \"\"\n  );\n  const [isAsc, setIsAsc] = useState(true);\n  const [sortField, setSortField] = useState(\"\");\n\n  //load data\n\n  const onClickHandler = async () => {\n    const result = await fetch(\"http://localhost:8082/category/loadImage/2\", {\n      mode: \"no-cors\", // 'cors' by default\n    });\n    const blob = await result.blob();\n    const url = URL.createObjectURL(blob);\n    setImage(url);\n    console.log(url);\n  };\n\n  //update data\n  const updateCategories = () => {\n    fetch(\"http://localhost:8082/ShoppingCartAdmin/category/getAll\")\n      .then((res) => res.json())\n      .then((result) => {\n        setCategories(result);\n      });\n  };\n\n  //delete category\n  const handleDelete = (id) => {\n    fetch(\"http://localhost:8082/ShoppingCartAdmin/category/delete/\" + id, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setMessage(result.message);\n      })\n      .then(updateCategories);\n  };\n  //enable/disable category\n  const handleEnable = (id, bool) => {\n    fetch(\n      \"http://localhost:8082/ShoppingCartAdmin/category/\" +\n        id +\n        \"/enabled/\" +\n        bool,\n      {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((res) => res.json())\n      .then((result) => setMessage(result.message))\n      .then(() => {\n        updateCategories();\n      });\n  };\n\n  return (\n    <>\n      <img src={image ? image : null} alt=\"\" />\n      <div>\n        <h2 className=\"text-center\">Manage Categories - View All</h2>\n      </div>\n      {message != \"\" ? (\n        <div className=\"alert alert-success text-center\">{message}</div>\n      ) : null}\n      <a\n        href=\"http://localhost:8082/ShoppingCartAdmin/users/export/csv\"\n        style={{ margin: \"0 5px 0 5px\" }}\n      >\n        <FontAwesomeIcon icon={faFileCsv} />\n      </a>\n      <a\n        href=\"http://localhost:8082/ShoppingCartAdmin/users/export/pdf\"\n        style={{ margin: \"0 5px 0 5px\" }}\n      >\n        <FontAwesomeIcon icon={faFilePdf} />\n      </a>\n      <a\n        href=\"http://localhost:8082/ShoppingCartAdmin/users/export/excel\"\n        style={{ margin: \"0 5px 0 5px\" }}\n      >\n        <FontAwesomeIcon icon={faFileExcel} />\n      </a>\n      <div className=\"full-details\">\n        <table className=\"table table-bordered table-striped table-hover table-reponsive-xl\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th className=\"hideable-column\">\n                <a\n                  className=\"text-white\"\n                  onClick={() => {\n                    if (\n                      (isAsc && sortField == \"id\") ||\n                      (!isAsc && sortField != \"id\")\n                    ) {\n                      setIsAsc(false);\n                      setSortField(\"id\");\n                      setCategories(\n                        [...categories].sort((a, b) => (a.id > b.id ? -1 : 1))\n                      );\n                    } else if (\n                      (!isAsc && sortField == \"id\") ||\n                      (isAsc && sortField != \"id\")\n                    ) {\n                      setIsAsc(true);\n                      setSortField(\"id\");\n                      setCategories(\n                        [...categories].sort((a, b) => (a.id > b.id ? 1 : -1))\n                      );\n                    }\n                  }}\n                >\n                  Category Name\n                </a>\n                {sortField == \"id\" && isAsc == true ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountUp} />\n                  </span>\n                ) : sortField == \"id\" && !isAsc ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountDown} />\n                  </span>\n                ) : null}\n              </th>\n              <th className=\"hideable-column\">Image</th>\n              <th>\n                <a\n                  className=\"text-white\"\n                  onClick={() => {\n                    if (\n                      (isAsc && sortField == \"name\") ||\n                      (!isAsc && sortField != \"name\")\n                    ) {\n                      setIsAsc(false);\n                      setSortField(\"name\");\n                      setCategories(\n                        [...categories].sort((a, b) =>\n                          a.name > b.name ? -1 : 1\n                        )\n                      );\n                    } else if (\n                      (!isAsc && sortField == \"name\") ||\n                      (isAsc && sortField != \"name\")\n                    ) {\n                      setIsAsc(true);\n                      setSortField(\"name\");\n                      setCategories(\n                        [...categories].sort((a, b) =>\n                          a.name > b.name ? 1 : -1\n                        )\n                      );\n                    }\n                  }}\n                >\n                  Category Name\n                </a>\n                {sortField == \"name\" && isAsc == true ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountUp} />\n                  </span>\n                ) : sortField == \"name\" && !isAsc ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountDown} />\n                  </span>\n                ) : null}\n              </th>\n\n              <th>\n                <a\n                  className=\"text-white\"\n                  onClick={() => {\n                    if (\n                      (isAsc && sortField == \"alias\") ||\n                      (!isAsc && sortField != \"alias\")\n                    ) {\n                      setIsAsc(false);\n                      setSortField(\"alias\");\n                      setCategories(\n                        [...categories].sort((a, b) =>\n                          a.alias > b.alias ? -1 : 1\n                        )\n                      );\n                    } else if (\n                      (!isAsc && sortField == \"alias\") ||\n                      (isAsc && sortField != \"alias\")\n                    ) {\n                      setIsAsc(true);\n                      setSortField(\"alias\");\n                      setCategories(\n                        [...categories].sort((a, b) =>\n                          a.alias > b.alias ? 1 : -1\n                        )\n                      );\n                    }\n                  }}\n                >\n                  Alias\n                </a>\n                {sortField == \"alias\" && isAsc == true ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountUp} />\n                  </span>\n                ) : sortField == \"alias\" && !isAsc ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountDown} />\n                  </span>\n                ) : null}\n              </th>\n              <th>\n                <a\n                  className=\"text-white\"\n                  onClick={() => {\n                    if (\n                      (isAsc && sortField == \"enable\") ||\n                      (!isAsc && sortField != \"enable\")\n                    ) {\n                      setIsAsc(false);\n                      setSortField(\"enable\");\n                      setCategories(\n                        [...categories].sort((a, b) =>\n                          a.enable > b.enable ? -1 : 1\n                        )\n                      );\n                    } else if (\n                      (!isAsc && sortField == \"enable\") ||\n                      (isAsc && sortField != \"enable\")\n                    ) {\n                      setIsAsc(true);\n                      setSortField(\"enable\");\n                      setCategories(\n                        [...categories].sort((a, b) =>\n                          a.enable > b.enable ? 1 : -1\n                        )\n                      );\n                    }\n                  }}\n                >\n                  Enable\n                </a>\n                {sortField == \"enable\" && isAsc == true ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountUp} />\n                  </span>\n                ) : sortField == \"enable\" && !isAsc ? (\n                  <span>\n                    <FontAwesomeIcon icon={faSortAmountDown} />\n                  </span>\n                ) : null}\n              </th>\n              <th>\n                <span>Edit</span>\n              </th>\n              <th>\n                <span>Delete</span>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {categories.map((category, index) => {\n              return (\n                <tr key={index}>\n                  <td className=\"hideable-column\">{category.id}</td>\n                  <td>\n                    <span className=\"fa fa-portait fa-3x icon-silver\">\n                      <FontAwesomeIcon icon={faBowlFood} color=\"grey\" />\n                    </span>\n                    {/* <img\n                    th:if=\"${category.photos != null}\"\n                    th:src=\"@{${category.photosImagePath}}\"\n                    alt=\"\"\n                    style=\"width: 100px;\"\n                  /> */}\n                  </td>\n                  <td className=\"hideable-column\">{category.name}</td>\n                  <td>{category.alias}</td>\n                  <td>\n                    <div>\n                      {category.enabled ? (\n                        <span\n                          onClick={() => {\n                            handleEnable(category.id, false);\n                          }}\n                          tittle=\"'Disable this ' + 'category'\"\n                          className=\"fas fa-check-circle fa-2x icon-green\"\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </span>\n                      ) : (\n                        <span\n                          onClick={() => {\n                            handleEnable(category.id, true);\n                          }}\n                          //   th:if=\"${category.enabled == false}\"\n                          //   th:href=\"@{'/categorys/' + ${category.id} + '/enabled/true'}\"\n                          //   th:tittle=\"'Enabled this ' + 'category'\"\n                          className=\"fas fa-circle fa-2x icon-dark\"\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} color=\"grey\" />\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td>\n                    <a\n                      href={\"/category/update/\" + category.id}\n                      // th:tittle=\"'Edit this' + 'category'\"\n                      className=\"fas fa-edit fa-2x icon-green\"\n                    >\n                      <FontAwesomeIcon icon={faFilePen} color=\"grey\" />\n                    </a>\n                  </td>\n                  <td>\n                    <span\n                      onClick={() => handleDelete(category.id)}\n                      // th:href=\"@{'/category/delete/' + ${category.id}}\"\n                      // th:entityId=\"${category.id}\"\n                      // th:tittle=\"'Delete this' + 'category'\"\n                      className=\"fas fa-trash fa-2x icon-dark link-delete\"\n                    >\n                      <FontAwesomeIcon icon={faXmark} color=\"grey\" />\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <nav>\n        <ul className=\"pagination justify-content-center flex-wrap\">\n          <li\n            className={\n              currentPage > 1 ? \"page-item active\" : \"page-item disabled\"\n            }\n          >\n            <button\n              onClick={() => {\n                setCurrentPage(1);\n              }}\n              className=\"page-link\"\n            >\n              First\n            </button>\n          </li>\n          <li\n            className={\n              currentPage > 1 ? \"page-item active\" : \"page-item disabled\"\n            }\n          >\n            <button\n              onClick={() => {\n                if (currentPage > 1) {\n                  setCurrentPage(currentPage - 1);\n                }\n              }}\n              className=\"page-link\"\n            >\n              Previous\n            </button>\n          </li>\n          {Array(totalPage)\n            .fill(null)\n            .map((item, index) => {\n              if (index + 1 == currentPage) {\n                return (\n                  <div key={index} className=\"page-item active\">\n                    <a href=\"\" className=\"page-link\">\n                      {index + 1}\n                    </a>\n                  </div>\n                );\n              } else {\n                return (\n                  <div key={index} className=\"page-item\">\n                    <button\n                      onClick={() => {\n                        setCurrentPage(index + 1);\n                      }}\n                      className=\"page-link\"\n                    >\n                      {index + 1}\n                    </button>\n                  </div>\n                );\n              }\n            })}\n          <li\n            className={\n              currentPage < totalPage\n                ? \"page-item active\"\n                : \"page-item disabled\"\n            }\n          >\n            <button\n              onClick={() => {\n                if (currentPage < totalPage) {\n                  setCurrentPage(currentPage + 1);\n                }\n              }}\n              className=\"page-link\"\n            >\n              Next\n            </button>\n          </li>\n\n          <li\n            className={\n              currentPage < totalPage\n                ? \"page-item active\"\n                : \"page-item disabled\"\n            }\n          >\n            <button\n              onClick={() => {\n                setCurrentPage(totalPage);\n              }}\n              className=\"page-link\"\n            >\n              Last\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}